{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/ReactApps/mern-contact-keeper/client/src/context/contact/contactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER //   CONTACT_ERROR,\n} from '../types';\nimport contactContext from './contactContext';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }]\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n  // Set Current Contact\n  // Clear current Contact\n  // update Contact\n  // Filter Contacts\n  // Clear Filters\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/admin/Desktop/projects/ReactApps/mern-contact-keeper/client/src/context/contact/contactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","contactContext","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","addContact","contact","v4","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,cARF,EASEC,YATF,CAUE;AAVF,OAWO,UAXP;AAYA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ;AADS,GAArB;AAyBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACG,cAAD,EAAiBa,YAAjB,CAApC,CA1B8B,CA4B9B;;AACA,QAAMS,UAAU,GAAIC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACR,EAAR,GAAajB,IAAI,CAAC0B,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEjB,WAAR;AAAqBuB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAHD,CA7B8B,CAkC9B;AAEA;AAEA;AAEA;AAEA;AAEA;;;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AADX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,KAAK,CAACc,QALT,CADF;AASD,CAvDD;;AAyDA,eAAef,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  //   CONTACT_ERROR,\n} from '../types';\nimport contactContext from './contactContext';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'Jill Johnson',\n        email: 'jill@gmail.com',\n        phone: '111-111-1111',\n        type: 'personal',\n      },\n      {\n        id: 2,\n        name: 'Sara Watson',\n        email: 'sara@gmail.com',\n        phone: '222-222-2222',\n        type: 'personal',\n      },\n      {\n        id: 3,\n        name: 'Harry White',\n        email: 'harry@gmail.com',\n        phone: '333-333-3333',\n        type: 'professional',\n      },\n    ],\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add Contact\n  const addContact = (contact) => {\n    contact.id = uuid.v4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete Contact\n\n  // Set Current Contact\n\n  // Clear current Contact\n\n  // update Contact\n\n  // Filter Contacts\n\n  // Clear Filters\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}